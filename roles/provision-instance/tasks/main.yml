---
## Provision an EC2 instance.

- meta: refresh_inventory

- name: Create a security group
  ec2_group:
    name: "{{ group }}"
    description: The Modus security group
    region: "{{ region }}"
    tags:
      Name: "{{ group }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
        rule_desc: "All ssh from any"
  register: ec2_group
- debug: msg="Security group {{ ec2_group.group_id }} has rules {{ ec2_group.ip_permissions }}"

- name: Launch an instance
  ec2:
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    region: "{{ region }}"
    group: "{{ group }}"
    key_name: "{{ key_name }}"
    exact_count: 1
    count_tag:
      Name: "{{ instance_tags.name }}"
    instance_tags:
      Name: "{{ instance_tags.name }}"
    volumes:
      - device_name: "/dev/sda1"
        volume_size: 8
        delete_on_termination: true
    monitoring: yes
    wait: true
    wait_timeout: 600
  tags: 
    - new_instance
  register: ec2

- debug: msg="Instance {{ instance_tags.name }} metadata is {{ ec2 }}"
- debug: msg="Tagged instance ID is {{ ec2.tagged_instances[0].id }}"

- name: Create an alarm to recover the instance
  ec2_metric_alarm:
    state: present
    region: "{{ region }}"
    name: "recover-modus"
    metric: "StatusCheckFailed_System"
    namespace: "AWS/EC2"
    statistic: "Minimum"
    comparison: ">="
    threshold: 1.0
    period: 60
    evaluation_periods: 2
    unit: "Seconds"
    description: "This will recover the modus instance when it terminates"
    dimensions: { "InstanceId":"{{ item.id }}" }
    alarm_actions: ["arn:aws:automate:{{ region }}:ec2:recover"]
  with_items: "{{ ec2.tagged_instances }}"
  register: alarm

- debug: msg="Alarm is {{ alarm }}"

- name: Add the newly created host to inventory
  add_host:
    name: "{{ item.public_ip }}"
    groups: "{{ group }}"
  with_items: "{{ ec2.tagged_instances }}"

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2.tagged_instances }}"

